[{"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/index.js":"1","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/reportWebVitals.js":"2","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/App.js":"3","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/reducers/index.js":"4","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Home.js":"5","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/useDarkMode.js":"6","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/NavBar.js":"7","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Register.js":"8","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/User.js":"9","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Login.js":"10","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/client/ClientHome.js":"11","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/InstructorHome.js":"12","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/client/ScheduledClasses.js":"13","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/actions/index.js":"14","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/useLocalStorage.js":"15","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/client/Search.js":"16","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/InstructorDashboard.js":"17","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/InstructorCreateForm.js":"18","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/client/ClassCard.js":"19","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/InstructorUpdateForm.js":"20","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/EnrolledUsers.js":"21","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/PrivateRoute.js":"22","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/utils/axiosWithAuth.js":"23","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/InstructorClass.js":"24"},{"size":1011,"mtime":1695868819561,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1695868819562,"results":"27","hashOfConfig":"26"},{"size":1860,"mtime":1695874273675,"results":"28","hashOfConfig":"26"},{"size":5441,"mtime":1695868819561,"results":"29","hashOfConfig":"26"},{"size":436,"mtime":1695868819544,"results":"30","hashOfConfig":"26"},{"size":583,"mtime":1695868819560,"results":"31","hashOfConfig":"26"},{"size":1090,"mtime":1695874542584,"results":"32","hashOfConfig":"26"},{"size":5465,"mtime":1695874335027,"results":"33","hashOfConfig":"26"},{"size":103,"mtime":1695868819546,"results":"34","hashOfConfig":"26"},{"size":7459,"mtime":1695874657205,"results":"35","hashOfConfig":"26"},{"size":2088,"mtime":1695868819547,"results":"36","hashOfConfig":"26"},{"size":1343,"mtime":1695868819545,"results":"37","hashOfConfig":"26"},{"size":1898,"mtime":1695868819547,"results":"38","hashOfConfig":"26"},{"size":5797,"mtime":1695868819544,"results":"39","hashOfConfig":"26"},{"size":589,"mtime":1695868819560,"results":"40","hashOfConfig":"26"},{"size":574,"mtime":1695868819547,"results":"41","hashOfConfig":"26"},{"size":3387,"mtime":1695868819545,"results":"42","hashOfConfig":"26"},{"size":9458,"mtime":1695868819545,"results":"43","hashOfConfig":"26"},{"size":3336,"mtime":1695868819547,"results":"44","hashOfConfig":"26"},{"size":10266,"mtime":1695868819545,"results":"45","hashOfConfig":"26"},{"size":2374,"mtime":1695868819545,"results":"46","hashOfConfig":"26"},{"size":449,"mtime":1695868819546,"results":"47","hashOfConfig":"26"},{"size":361,"mtime":1695869383161,"results":"48","hashOfConfig":"26"},{"size":4351,"mtime":1695868819545,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"quee2d",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/index.js",[],["103","104"],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/reportWebVitals.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/App.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/reducers/index.js",["105","106"],"import {\n    SCHEDULE_CLASS,\n    UNSCHEDULE_CLASS,\n    ADD_PASS,\n    EDIT_PASS,\n    DELETE_PASS,\n    DELETE_CLASS_FAILURE,\n    DELETE_CLASS_SUCCESS,\n    DELETE_CLASS_START,\n    ADD_CLASS_FAILURE,\n    ADD_CLASS_SUCCESS,\n    ADD_CLASS_START,\n    EDIT_CLASS_FAILURE,\n    EDIT_CLASS_SUCCESS,\n    EDIT_CLASS_START,\n    FETCHCLASS_SUCCESS,\n    ADD_USER,\n    REMOVE_USER,\n    GET_CLASSES_START,\n    GET_CLASSES_SUCCESS,\n    GET_CLASSES_FAILURE,\n    GET_REGISTERED_CLIENTS_START,\n    GET_REGISTERED_CLIENTS_SUCCESS,\n    GET_REGISTERED_CLIENTS_FAILURE,\n  } from \"../actions/index\";\n  \n  const initialState = {\n    //holder\n    classes: [\n    ],\n    passes: [\n      {\n        workoutName: \"Crossfit at the Beach\",\n        instructor: \"Stephanie\",\n        client: \"Simone\",\n        classesRemaining: 3,\n        id: 0\n      },\n      {\n        workoutName: \"Yoga to Fit\",\n        instructor: \"Johnny\",\n        client: \"Byron\",\n        classesRemaining: 8,\n        id: 1\n      },\n      {\n        workoutName: \"Cross Training\",\n        instructor: \"Alan\",\n        client: \"Peter\",\n        classesRemaining: 3,\n        id: 2\n      },\n      {\n        workoutName: \"Strength 101\",\n        instructor: \"James\",\n        client: \"Max\",\n        classesRemaining: 7,\n        id: 3\n      },\n      {\n        workoutName: \"Ab Ripper X\",\n        instructor: \"Jessica\",\n        client: \"Julissa\",\n        classesRemaining: 4,\n      }\n    ],\n    registeredClients: [],\n    user: \"\",\n    isFetching: false,\n    error: '',\n    isPosting: false,\n    isEditing: false\n  };\n  \n  export const classReducer = (state = initialState, action) => {\n    switch (action.type) {\n  \n      case FETCHCLASS_SUCCESS:\n        return {\n          ...state,\n          classes: action.payload\n  \n        }\n      case SCHEDULE_CLASS:\n        return {\n          ...state,\n          registeredClient: [...state.registeredClient, action.payload],\n          classes: [...state.classes.filter((item, index) => {\n            return item !== action.payload;\n          })]\n        };\n      case UNSCHEDULE_CLASS:\n        return {\n          ...state,\n          registeredClient: [\n            ...state.registeredClient.filter((item, index) => {\n              return item !== action.payload;\n            })\n          ],\n          classes: [...state.classes, action.payload]\n        };\n      case ADD_PASS:\n        return {\n          ...state,\n          passes: [...state.passes, action.payload]\n        };\n      case DELETE_PASS:\n        return {\n          ...state,\n          passes: [\n            ...state.passes.filter((item, index) => {\n              return item !== action.payload;\n            })\n          ]\n        };\n      case EDIT_PASS:\n        return {\n          ...state,\n          passes: state.passes.map(item => {\n            if (item.id === action.payload.id) {\n              return action.payload;\n            }\n            return item;\n          })\n        };\n      case ADD_CLASS_START:\n        return {\n          ...state,\n          isPosting: true\n        };\n      case ADD_CLASS_SUCCESS:\n        return {\n          ...state,\n          isPosting: false,\n          error: '',\n          twoClasses: [...state.twoClasses, action.payload]\n        };\n      case ADD_CLASS_FAILURE:\n        return {\n          ...state,\n          isPosting: false,\n          error: action.payload.data.Error\n        };\n      case EDIT_CLASS_START:\n        return {\n          ...state,\n          isEditing: true\n        }\n      case EDIT_CLASS_SUCCESS:\n        return {\n          ...state,\n          isEditing: false,\n          error: '',\n          twoClasses: state.twoClasses.map(item => {\n            if (item.id === action.payload.id) {\n              return { ...action.payload }\n            }\n            return item\n          })\n        };\n      case EDIT_CLASS_FAILURE:\n        return {\n          ...state,\n          isEditing: false,\n          error: action.payload\n        };\n      case DELETE_CLASS_START:\n        return {\n          ...state,\n          isPosting: true\n        };\n      case DELETE_CLASS_SUCCESS:\n        const filteredClasses = state.classes.filter(c => {\n            return c.id !== action.payload\n        })\n        return {\n          ...state,\n          isPosting: false,\n          error: '',\n          classes: filteredClasses,\n          twoClasses: state.twoClasses.filter(c => c.id !== action.payload)\n        };\n      case DELETE_CLASS_FAILURE:\n        return {\n          ...state,\n          isPosting: false,\n          error: action.payload.data.Error\n        };\n      case GET_CLASSES_START:\n        return {\n          ...state,\n          isFetching: true\n        };\n      case GET_CLASSES_SUCCESS:\n        return {\n          ...state,\n          isFetching: false,\n          error: '',\n          classes: action.payload,\n          twoClasses:\n            action.payload.sort((a, b) => a.id - b.id)\n        };\n      case GET_CLASSES_FAILURE:\n        return {\n          ...state,\n          isFetching: false,\n          error: action.payload\n        };\n\n      case GET_REGISTERED_CLIENTS_SUCCESS:\n        return {\n          ...state,\n          isFetching: false,\n          error: '',\n          registeredClients: action.payload\n        };\n      case ADD_USER:\n        return {\n          ...state,\n          user: action.payload\n        }\n      case REMOVE_USER:\n        return {\n          ...state,\n          user: ''\n        }\n      default:\n        return state;\n    }\n  };","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Home.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/useDarkMode.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/NavBar.js",["107"],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Register.js",["108"],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/User.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Login.js",["109"],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/client/ClientHome.js",["110"],"import React, { useEffect, useState } from \"react\";\nimport Search from \"./Search\";\nimport { connect } from \"react-redux\";\nimport ClassCard from './ClassCard';\nimport { fetchClasses } from \"../../actions/index\";\n// import '../styles/ClientStyle.css';\nimport '../../App.css';\n\nconst divStyle = {\n  display: \"flex\",\n  width: \"100%\",\n  flexDirection: \"row\",\n  margin: \"0 auto\",\n  flexWrap: \"wrap\",\n  justifyContent: \"center\"\n};\n\nconst ClientHome = props => {\n  const [query, setQuery] = useState(\"\");\n  const [displayedClasses, setDisplayedClasses] = useState([]);\n  const fetchClasses = props.fetchClasses;\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  useEffect(()=> {\n    fetchClasses();\n  }, [fetchClasses]);\n\n  useEffect(() => {\n    if (query.length < 1) {\n      setDisplayedClasses(props.classes);\n    } else {\n      let searchResults = displayedClasses.filter(c => {\n        return (\n          c.class_name.toLowerCase().includes(query.toLowerCase()) ||\n          c.class_type.toLowerCase().includes(query.toLowerCase()) ||\n          c.start_time.toLowerCase().includes(query.toLowerCase()) ||\n          c.class_intensity.toLowerCase().includes(query.toLowerCase()) ||\n          c.class_duration.toString().includes(query) ||\n          c.class_location.toLowerCase().includes(query.toLowerCase())\n        );\n      });\n\n      setDisplayedClasses(searchResults);\n    }\n  }, [props.classes, query]);\n\n  return (\n    <div id=\"client-page\">\n      <div className=\"background\">\n        <br />\n        <h1>Client Dashboard</h1>\n        <Search handleInputChange={handleInputChange} query={query} />\n        <div style={divStyle}>\n          {displayedClasses.map((klass, index) => (\n            <ClassCard \n            key={index} \n            klass={klass}\n            index={index}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    classes: state.classes,\n    scheduledClasses: state.scheduledClasses\n  };\n};\nexport default connect(mapStateToProps, { fetchClasses })(ClientHome);","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/InstructorHome.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/client/ScheduledClasses.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/actions/index.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/useLocalStorage.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/client/Search.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/InstructorDashboard.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/InstructorCreateForm.js",["111"],"import React,{useState,useEffect} from 'react';\nimport {useHistory,useParams} from 'react-router-dom';\nimport { Form,FormGroup,Input,Label,Button,Badge} from 'reactstrap';\nimport * as yup from \"yup\";\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\nimport Modal from 'react-bootstrap/Modal';\nimport { gsap } from \"gsap\";\n\nfunction InstructorCreate(){\n    const history=useHistory();\n    const params=useParams();\n     \n    const [classInfo, setClassInfo]=useState({\n        // class_id:Date.now(),\n        class_name:\"\",\n        class_type:\"\",\n        class_intensity:\"\",\n        class_location:\"\",\n        start_time:\"\",\n        class_duration:\"\",\n        class_max_size:30,\n    })\n\n     //animation on create form whenever rendered\n     useEffect(()=>{\n      gsap.from(\".ins_create\",{x:10,duration: 1,ease:\"slow\"})\n    },[]);\n\n\n    //setup Modal\n    const [show, setShow] = useState(false);\n\n    const handleClose = () =>{\n        setShow(false); \n        history.push(`/instructor/dashboard/${params.userid}`)\n        // const newList=classList.filter(e=>e.id !== item.id)\n        // console.log('newList in delete=',newList);\n        // setClassList(newList);\n    } \n\n    const handleShow = () => setShow(true);\n\n    // control whether or not the form can be submitted if there are errors in form validation (in the useEffect)\n    const [buttonIsDisabled, setButtonIsDisabled] = useState(true);\n\n    // server error\n    const [serverError, setServerError] = useState(\"\");\n\n    // managing state for errors. empty unless inline validation (validateInput) updates key/value pair to have error\n      const [errors, setErrors] = useState({\n        class_name:\"\",\n        class_type:\"\",\n        class_intensity:\"\",\n        class_location:\"\",\n        start_time:\"\",\n        class_duration:\"\",\n        class_max_size:\"\",\n      });\n\n      const handleChange=(e)=>{\n        e.persist();\n        const newClassInfo = {\n            ...classInfo,\n            [e.target.name]:e.target.value\n          };\n          validateChange(e); // for each change in input, do inline validation\n          // console.log('After validate err State=', errors)\n          setClassInfo(newClassInfo); // update state with new data\n    }\n\n    //inline validation of one key-value pair at a time with yup\n  const validateChange =(e)=>{\n    yup.reach(formSchema, e.target.name)\n    .validate(e.target.value)\n    .then((valid) => {\n      // the input is passing ! & reset of that input's error\n      // console.log(\"valid here\", e.target.name);\n      setErrors({ ...errors, [e.target.name]: \"\" });\n    })\n    .catch((err) => {\n      // the input is breaking form schema\n      console.log(\"err here\", err);\n      setErrors({ ...errors, [e.target.name]: err.errors[0] });\n    });\n }\n\n  // whenever state updates, validate the entire form.\n  // if valid, then change button to be enabled.\n  useEffect(() => {\n    formSchema.isValid(classInfo).then((valid) => {\n      // console.log(\"is my form valid?\", valid);\n      // valid is a boolean \n      setButtonIsDisabled(!valid);\n    });\n  }, [classInfo]);\n\n  // Schema, used for all validation to determine whether the input is valid or not\n  const formSchema = yup.object().shape({\n    class_name: yup.string()\n    .min(2,\"Please enter name of atleast 2 characters\")\n    .required(\"ClassName is required!\"),\n\n    class_type:yup.string()\n    .oneOf([\"Strength Training\",\"Spin Class\",\"Power Lift\",\"Yoga\",\"Pilates\",\"Weight Lifting\"])\n    .required(\"Choose Type is required,please choose one!\"),\n\n    class_intensity: yup.string()\n    .oneOf([\"Beginner\",\"Intermediate\",\"Advanced\"])\n    .required(\"Please choose one\"),\n\n    class_location: yup.string().required(\"Location is required!\"),\n\n    start_time: yup.string().required(\"date & time is required!\"),\n\n    class_duration:yup.string().required(\"Duration is required!\"),\n    \n    class_max_size:yup.number()\n    .max(30,\"Max class size allowed is 30\")\n    .required(\"Maxsize is required!\"),\n  });\n\n  const handleSubmit=(e)=>{\n    e.preventDefault();\n    // console.log('on submit=',classInfo)\n    axiosWithAuth()  \n          .post(`/api/users/${params.userid}/class`,classInfo)\n          .then((res)=>{\n            // console.log('Response back from reqres:',res.data)\n            handleShow();\n            // setClassList([...classList,res.data])\n            //clear server error\n            // setServerError(null);      \n          })\n          .catch((err)=>{\n            console.log('server erro in post',err)\n            setServerError(\"oops! Looks like server side error!\");\n          })        \n  }\n  const handleBack=()=>{\n    history.push(`/instructor/dashboard/${params.userid}`)\n  }\n\nreturn(\n    <>\n    {show ?\n    <Modal show={show} onHide={handleClose}  \n    backdrop=\"static\"\n    keyboard={false}\n    size=\"lg\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered>\n        <Modal.Header closeButton>\n        <Modal.Title>Yay! You have successfully created your class<h3>{classInfo.class_name}!</h3></Modal.Title>\n        </Modal.Header>\n        <Modal.Body> <h4>Thank you!</h4></Modal.Body>\n        <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n        Close\n        </Button>\n        </Modal.Footer>\n    </Modal> :   \n    <div>\n    <h3><Badge color=\"primary\">Create new Class here!</Badge></h3>\n    <div className=\"ins_create\">\n        <Form onSubmit={handleSubmit}\n         name=\"inscreate\">\n        {serverError && <p className=\"error\">{serverError}</p>}\n            <FormGroup>\n            <Label htmlFor=\"class_name\"><b>Class Name</b></Label>\n            <Input name=\"class_name\"\n            id=\"class_name\"\n            value={classInfo.class_name}\n            onChange={handleChange}\n            placeholder=\"Burn With us!\"/>\n             {errors.class_name.length > 0 ? <p className=\"error\">{errors.class_name}</p> : null}\n            </FormGroup>\n\n            <FormGroup>\n            <Label htmlFor=\"class_type\"><b>Class Type</b></Label>\n            <Input\n            name=\"class_type\"\n            type=\"select\"\n            id=\"class_type\"\n            value={classInfo.class_type}\n            onChange={handleChange}>\n            <option value=\"\">***Please Choose One!***</option>\n            <option value=\"Strength Training\">Strength Training</option>\n            <option value=\"Spin Class\">Spin Class</option>\n            <option value=\"Power Lift\">Power Lift</option>\n            <option value=\"Yoga\">Yoga</option>\n            <option value=\"Pilates\">Pilates</option>\n            </Input> \n            {errors.class_type.length > 0 ? <p className=\"error\">{errors.class_type}</p> : null}\n            </FormGroup>\n\n            <FormGroup>\n            <Label htmlFor=\"class_intensity\"><b>Class Intensity</b></Label>\n            <Input\n            type=\"select\"\n            name=\"class_intensity\"\n            id=\"class_intensity\"\n            value={classInfo.class_intensity}\n            onChange={handleChange}>\n            <option value=\"\">***Please Choose One!***</option>\n            <option>Beginner</option>\n            <option>Intermediate</option>\n            <option>Advanced</option>\n            </Input> \n            {errors.class_intensity.length > 0 ? <p className=\"error\">{errors.class_intensity}</p> : null}\n            </FormGroup>\n\n            <FormGroup>\n            <Label htmlFor=\"class_location\"><b>Class Location</b></Label>\n            <Input name=\"class_location\"\n            id=\"class_location\"\n            value={classInfo.class_location}\n            onChange={handleChange}\n            placeholder=\"Street,City,State,Zip\"/>\n            {errors.class_location > 0 ? <p className=\"error\">{errors.class_location}</p> : null}\n            </FormGroup>\n\n            <FormGroup>\n            <Label htmlFor=\"start_time\"><b>Class Start Time</b></Label>\n            <Input name=\"start_time\"\n            id=\"start_time\"\n            type=\"datetime-local\"\n            value={classInfo.start_time}\n            onChange={handleChange}\n            placeholder=\"00:00\"/>\n            {errors.start_time > 0 ? <p className=\"error\">{errors.start_time}</p> : null}\n            </FormGroup>\n\n            <FormGroup>\n            <Label htmlFor=\"class_duration\"><b>Class Duration(minutes)</b></Label>\n            <Input name=\"class_duration\"\n            id=\"class_duration\"\n            value={classInfo.class_duration}\n            type=\"Number\"\n            onChange={handleChange}\n            placeholder=\"30minutes\"/>\n            {errors.class_duration > 0 ? <p className=\"error\">{errors.class_duration}</p> : null}\n            </FormGroup>\n\n            <FormGroup>\n            <Label htmlFor=\"class_max_size\"><b>Class Max Size</b></Label>\n            <Input name=\"class_max_size\"\n            id=\"class_max_size\"\n            type=\"number\"\n            min=\"3\"\n            max=\"30\"\n            value={classInfo.class_max_size}\n            onChange={handleChange}\n            />\n            {errors.class_max_size.length > 0 ? <p className=\"error\">{errors.class_max_size}</p> : null}\n\n            </FormGroup>\n            <Button color=\"success\"\n            className=\"btn-lg  btn-block ml-1\"\n            type=\"submit\"\n            disabled={buttonIsDisabled}>Create Class</Button>\n            \n            <Button color=\"warning\"\n            className=\"btn-lg  btn-block ml-1\"\n            onClick={handleBack}>Go Back</Button>\n        </Form>\n    </div>\n    </div>\n    }   \n    </>\n)\n}\n\nexport default InstructorCreate;\n\n\n ","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/client/ClassCard.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/InstructorUpdateForm.js",["112","113"],"import React,{useState,useEffect} from 'react';\nimport {useHistory,useParams} from 'react-router-dom';\nimport { Form,FormGroup,Input,Label,Button} from 'reactstrap';\nimport * as yup from \"yup\";\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction InstructorUpdateForm(){\n    const [updated,setUpdated]=useState(false);\n    const history=useHistory();\n    const params = useParams(); \n    // console.log('params.userid in updateform=',params.userid)\n    // console.log('params.classid in updateform=',params.classid)\n       //setup Modal\n       const [show, setShow] = useState(false);\n\n      const handleClose = () =>{\n      setShow(false);\n      history.push(`/instructor/dashboard/${params.userid}`)\n       } \n\n      const handleShow = () => setShow(true);\n\n      const [classInfo, setClassInfo]=useState({\n        class_name:\"\",\n        class_intensity: \"\",\n        class_location: \"\",\n        class_max_size: \"\",\n        class_duration:\"\",\n        class_type: \"\",\n        start_time: \"\",\n      }) \n\n    // set classInfo by getting the class of that instructor id\n useEffect(()=>{\n  axiosWithAuth()\n  .get(`/api/users/${params.userid}/class`)\n  .then(res=>{\n      // console.log('res in get class:',res)\n      if (res.data.length !== 0){\n          const updateClass=res.data.find(item=>item.id === Number(params.classid));\n          setClassInfo(updateClass)\n       }\n  })\n  .catch(err=>{\n      console.log('err in get class',err)\n  })\n  //has to be id\n  },[params.userid,updated])\n\n  \n    // control whether or not the form can be submitted if there are errors in form validation (in the useEffect)\n    const [buttonIsDisabled, setButtonIsDisabled] = useState(true);\n\n    // server error\n    const [serverError, setServerError] = useState(\"\");\n\n    // managing state for errors. empty unless inline validation (validateInput) updates key/value pair to have error\n      const [errors, setErrors] = useState({\n        class_name:\"\",\n        class_type:\"\",\n        class_intensity:\"\",\n        class_location:\"\",\n        start_time:\"\",\n        class_duration:\"\",\n        class_max_size:\"\",\n      });\n\n      const handleChange=(e)=>{\n        e.persist();\n        const newClassInfo = {\n            ...classInfo,\n            [e.target.name]:e.target.value\n          };\n          validateChange(e); // for each change in input, do inline validation\n          // console.log('After validate err State=', errors)\n          setClassInfo(newClassInfo); // update state with new data\n    }\n\n    //inline validation of one key-value pair at a time with yup\n  const validateChange =(e)=>{\n    yup.reach(formSchema, e.target.name)\n    .validate(e.target.value)\n    .then((valid) => {\n      // the input is passing ! & reset of that input's error\n      // console.log(\"valid here\", e.target.name);\n      setErrors({ ...errors, [e.target.name]: \"\" });\n    })\n    .catch((err) => {\n      // the input is breaking form schema\n      // console.log(\"err here\", err);\n      setErrors({ ...errors, [e.target.name]: err.errors[0] });\n    });\n }\n\n  // whenever state updates, validate the entire form.\n  // if valid, then change button to be enabled.\n  useEffect(() => {\n    formSchema.isValid(classInfo).then((valid) => {\n      // console.log(\"is my form valid?\", valid);\n      // valid is a boolean \n      setButtonIsDisabled(!valid);\n    });\n  }, [classInfo]);\n\n  // Add a schema, used for all validation to determine whether the input is valid or not\n  const formSchema = yup.object().shape({\n    class_name: yup.string()\n    .min(2,\"Please enter name of atleast 2 characters\")\n    .required(\"ClassName is required!\"),\n\n    class_type:yup.string()\n    .oneOf([\"Strength Training\",\"Spin Class\",\"Power Lift\",\"Yoga\",\"Pilates\",\"Weight Lifting\"])\n    .required(\"Choose Type is required,please choose one!\"),\n\n    class_intensity: yup.string()\n    .oneOf([\"Beginner\",\"Intermediate\",\"Advanced\"])\n    .required(\"Please choose one\"),\n\n    class_location: yup.string().required(\"Location is required!\"),\n\n    start_time: yup.string().required(\"date & time is required!\"),\n\n    class_duration:yup.string().required(\"Duration is required!\"),\n    \n    class_max_size:yup.number()\n    .max(30,\"Max class size allowed is 30\")\n    .required(\"Maxsize is required!\"),\n  });\n\n  const handleSubmit=(e)=>{\n    e.preventDefault();\n    // console.log('on submit=',classInfo)\n    const updatedClassInfo= {\n        class_name:classInfo.class_name,\n        class_intensity: classInfo.class_intensity,\n        class_location: classInfo.class_location,\n        class_max_size: classInfo.class_max_size,\n        class_duration: classInfo.class_duration,\n        class_type: classInfo.class_type,\n        start_time: classInfo.start_time,\n        }; \n\n      // console.log('updated class=',updatedClassInfo)\n    axiosWithAuth() \n          .put(`/api/class/${classInfo.id}`, updatedClassInfo)\n          .then((res)=>{\n            // console.log('Response back from reqres:',res.data)\n            setUpdated(true);\n            // setClassList([...classList,res.data])\n            handleShow();\n            // history.push(`/instructor/dashboard/${params.userid}`)\n            //clear server error\n            setServerError(null);      \n          })\n          .catch((err)=>{\n            console.log('server erro in post',err)\n            setServerError(\"oops! Looks like server side error!\");\n          }) \n          \n  }\n\n  const handleBack=()=>{\n    history.push(`/instructor/dashboard/${params.userid}`)\n  }\nreturn(\n    <>\n    <h3>Update your class : {classInfo.class_name}!</h3>\n    {show ?\n    <Modal show={show} onHide={handleClose}  \n    backdrop=\"static\"\n    keyboard={false}\n    size=\"lg\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered>\n        <Modal.Header closeButton>\n        <Modal.Title><h3>Dear {classInfo.username}!</h3></Modal.Title>\n        </Modal.Header>\n        <Modal.Body><h4>Your class is Updated now,Enjoy fitness anywhere!</h4><h3>{classInfo.class_name}</h3> </Modal.Body>\n        <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n        Close\n        </Button>\n        </Modal.Footer>\n    </Modal> :\n    <div className=\"ins_create\">\n        <Form onSubmit={handleSubmit}\n         name=\"inscreate\">\n        {serverError && <p className=\"error\">{serverError}</p>}\n            <FormGroup>\n            <Label htmlFor=\"class_name\"><b>Class Name</b></Label>\n            <Input name=\"class_name\"\n            id=\"class_name\"\n            value={classInfo.class_name}\n            onChange={handleChange}\n            placeholder=\"Burn With us!\"/>\n             {errors.class_name.length > 0 ? <p className=\"error\">{errors.class_name}</p> : null}\n            </FormGroup>\n\n            <FormGroup>\n            <Label htmlFor=\"class_type\"><b>Class Type</b></Label>\n            <Input\n            name=\"class_type\"\n            type=\"select\"\n            id=\"class_type\"\n            value={classInfo.class_type}\n            onChange={handleChange}>\n            <option value=\"\">***Please Choose One!***</option>\n            <option>Strength Training</option>\n            <option>Spin Class</option>\n            <option>Power Lift</option>\n            <option>Yoga</option>\n            <option>Pilates</option>\n            <option>Weight Lifting</option>\n            </Input> \n            {errors.class_type.length > 0 ? <p className=\"error\">{errors.class_type}</p> : null}\n            </FormGroup>\n\n            <FormGroup>\n            <Label htmlFor=\"class_intensity\"><b>Class Intensity</b></Label>\n            <Input\n            type=\"select\"\n            name=\"class_intensity\"\n            id=\"class_intensity\"\n            value={classInfo.class_intensity}\n            onChange={handleChange}>\n            <option value=\"\">***Please Choose One!***</option>\n            <option>Beginner</option>\n            <option>Intermediate</option>\n            <option>Advanced</option>\n            </Input> \n            {errors.class_intensity.length > 0 ? <p className=\"error\">{errors.class_intensity}</p> : null}\n            </FormGroup>\n \n            <FormGroup>\n            <Label htmlFor=\"class_location\"><b>Class Location</b></Label>\n            <Input name=\"class_location\"\n            id=\"class_location\"\n            value={classInfo.class_location}\n            onChange={handleChange}\n            placeholder=\"Street,City,State,Zip\"/>\n             {errors.class_location.length > 0 ? <p className=\"error\">{errors.class_location}</p> : null}\n            </FormGroup>\n\n            <FormGroup>\n            <Label htmlFor=\"start_time\"><b>Class Start Time</b></Label>\n            <Input name=\"start_time\"\n            id=\"start_time\"\n            type=\"datetime-local\"\n            value={classInfo.start_time}\n            onChange={handleChange}\n            placeholder=\"00:00\"/>\n             {errors.start_time.length > 0 ? <p className=\"error\">{errors.start_time}</p> : null}\n            </FormGroup>\n\n            <FormGroup>\n            <Label htmlFor=\"class_duration\"><b>Class Duration(mins)</b></Label>\n            <Input name=\"class_duration\"\n            id=\"class_duration\"\n            value={classInfo.class_duration}\n            onChange={handleChange}\n            type=\"number\"\n            placeholder=\"45\"/>\n             {errors.class_duration.length > 0 ? <p className=\"error\">{errors.class_duration}</p> : null}\n            </FormGroup>\n\n            <FormGroup>\n            <Label htmlFor=\"class_max_size\"><b>Class Max Size</b></Label>\n            <Input name=\"class_max_size\"\n            id=\"class_max_size\"\n            type=\"number\"\n            min=\"3\"\n            max=\"50\"\n            value={classInfo.class_max_size}\n            onChange={handleChange}\n            />\n             {errors.class_max_size.length > 0 ? <p className=\"error\">{errors.class_max_size}</p> : null}\n            </FormGroup>\n            <Button color=\"success\"\n            className=\"btn-lg  btn-block\"\n            type=\"submit\"\n            disabled={buttonIsDisabled}>Update Class</Button>\n\n            <Button color=\"warning\"\n            className=\"btn-lg  btn-block\"\n            onClick={handleBack}\n            >Go Back</Button>\n        </Form>\n    </div>\n    }\n    </>\n)\n}\n\nexport default InstructorUpdateForm;\n\n\n ","/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/EnrolledUsers.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/PrivateRoute.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/utils/axiosWithAuth.js",[],"/Users/jonathanportillo/Lambda-School/build-week-stuff/anywherefitness2/Front-End-Anywherefitness/src/components/Instructor/InstructorClass.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":22,"column":5,"nodeType":"120","messageId":"121","endLine":22,"endColumn":33},{"ruleId":"118","severity":1,"message":"122","line":24,"column":5,"nodeType":"120","messageId":"121","endLine":24,"endColumn":35},{"ruleId":"118","severity":1,"message":"123","line":10,"column":9,"nodeType":"120","messageId":"121","endLine":10,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":69,"column":6,"nodeType":"126","endLine":69,"endColumn":16,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"125","line":74,"column":6,"nodeType":"126","endLine":74,"endColumn":17,"suggestions":"128"},{"ruleId":"124","severity":1,"message":"129","line":48,"column":6,"nodeType":"126","endLine":48,"endColumn":28,"suggestions":"130"},{"ruleId":"124","severity":1,"message":"125","line":95,"column":6,"nodeType":"126","endLine":95,"endColumn":17,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"132","line":49,"column":5,"nodeType":"126","endLine":49,"endColumn":28,"suggestions":"133"},{"ruleId":"124","severity":1,"message":"125","line":104,"column":6,"nodeType":"126","endLine":104,"endColumn":17,"suggestions":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'GET_REGISTERED_CLIENTS_START' is defined but never used.","Identifier","unusedVar","'GET_REGISTERED_CLIENTS_FAILURE' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formSchema'. Either include it or remove the dependency array.","ArrayExpression",["137"],["138"],"React Hook useEffect has a missing dependency: 'displayedClasses'. Either include it or remove the dependency array.",["139"],["140"],"React Hook useEffect has a missing dependency: 'params.classid'. Either include it or remove the dependency array.",["141"],["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"149","fix":"153"},"Update the dependencies array to be: [formSchema, userInfo]",{"range":"154","text":"155"},"Update the dependencies array to be: [formSchema, loginData]",{"range":"156","text":"157"},"Update the dependencies array to be: [displayedClasses, props.classes, query]",{"range":"158","text":"159"},"Update the dependencies array to be: [classInfo, formSchema]",{"range":"160","text":"161"},"Update the dependencies array to be: [params.classid, params.userid, updated]",{"range":"162","text":"163"},{"range":"164","text":"161"},[2034,2044],"[formSchema, userInfo]",[2282,2293],"[formSchema, loginData]",[1411,1433],"[displayedClasses, props.classes, query]",[3064,3075],"[classInfo, formSchema]",[1519,1542],"[params.classid, params.userid, updated]",[3388,3399]]